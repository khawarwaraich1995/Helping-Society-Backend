## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Client Authentication'
description: |-

  API endpoints for managing clients authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/client/register
    metadata:
      title: 'Register Endpoint'
      description: |-
        This endpoint allows you to register client and generate token for authentication.
        Along token client details will be displayed. To call authorized endpoints you need access_token generated by this endpoint.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the client.'
        required: true
        example: 'John Panda'
        type: string
      email:
        name: email
        description: 'The valid email of the client.'
        required: true
        example: john@example.com
        type: email
      password:
        name: password
        description: 'The password of the client.'
        required: true
        example: secret
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "data": {
                   "name": "Panda",
                   "email": "panda@gmail.coma",
                   "updated_at": "2021-12-15T19:22:18.000000Z",
                   "created_at": "2021-12-15T19:22:18.000000Z",
                   "id": 2
               },
               "access_token": "14|wiazS1DtHNXIWDToygChQD84uqU9HwVaU10nWVia",
               "token_type": "Bearer"
           }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/client/login
    metadata:
      title: 'Login Endpoint'
      description: |-
        This endpoint allows you to generate token of client after authentication.
        Along token client details will be displayed. To call authorized endpoints you need access_token generated by this endpoint.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The valid email of the client.'
        required: true
        example: testuser@example.com
        type: email
      password:
        name: password
        description: 'The password of the client.'
        required: true
        example: secret
        type: string
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
               "message": "You have successfully logged in!",
               "access_token": "13|JQHbQK8QuNHCzwztR30u2ogiBxuZNSBwJhZX8sop",
               "token_type": "Bearer",
               "data": {
                   "id": 1,
                   "name": "John Panda",
                   "email": "panda@gmail.com",
                   "status": 1
               }
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                "status": false,
                "message": "These credentials do not match our records!"
            }
        headers: []
        description: '401'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/v1/client/logout
    metadata:
      title: 'Logout Endpoint'
      description: |-
        This endpoint allows you to remove client token generated for authentication to logout user.
        To logout token must be required in header otherwise client will be Unauthenticated.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
      Authorization: 'Bearer $token'
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "status": true,
                 "message": "You have successfully logged out!"
           }
        headers: []
        description: '200'
      -
        status: 401
        content: |-
          {
                 "message": "Unauthenticated."
           }
        headers: []
        description: '401'
    responseFields: []
